version: 2.1

jobs:
  publish_blog_post:
    docker:
      - image: cimg/node:current
    steps:
      - checkout
      - run:
          name: "Install dependencies"
          command: "npm install"
      - run:
          name: "Generate blog post"
          command: "OPENAI_API_KEY=$openai_api_key npm run generate-blog-post"
      - run:
          name: "Commit and push"
          command: |
            git config --global user.email "gshively11@gmail.com"
            git config --global user.name "Grant Shively"
            git add --a
            git commit -m 'circleci: added new blog post'
            git push
  test_and_build:
    docker:
      - image: cimg/base:current
    steps:
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - checkout
      - run:
          name: "Test"
          command: "make test"
      - run:
          name: "Build"
          command: "make build"
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  e2e:
    docker:
      - image: cimg/base:current
    steps:
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - checkout
      - run:
          name: "Test"
          command: "make e2e-ci"
  deploy:
    docker:
      - image: cimg/base:current
    steps:
      - attach_workspace:
         at: ~/project
      - run:
          name: "Install flyctl"
          command: "curl -L https://fly.io/install.sh | sh"
      - run:
          name: "Deploy"
          command: "FLY_ACCESS_TOKEN=$flyio_api_token /home/circleci/.fly/bin/flyctl deploy"
workflows:
  app:
    when:
        and:
          - not:
              equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
          - not:
              equal: [ api, << pipeline.trigger_source >> ]
    jobs:
      - test_and_build
      - e2e
      - deploy:
          context:
            - flyio
          requires:
            - test_and_build
            - e2e
          filters:
            branches:
              only: main
  weekly_blog_post:
    when:
      or:
        - equal: [ weekly_blog_post, << pipeline.schedule.name >> ]
        - equal: [ api, << pipeline.trigger_source >> ]
    jobs:
      - publish_blog_post:
          context:
            - openai
